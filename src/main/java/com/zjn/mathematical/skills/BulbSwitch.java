package com.zjn.mathematical.skills;

/**
 * 319 灯泡开关
 * 初始时有n 个灯泡处于关闭状态。第一轮，你将会打开所有灯泡。接下来的第二轮，你将会每两个灯泡关闭第二个。
 *
 * 第三轮，你每三个灯泡就切换第三个灯泡的开关（即，打开变关闭，关闭变打开）。第 i 轮，你每 i 个灯泡就切换第 i 个灯泡的开关。直到第 n 轮，你只需要切换最后一个灯泡的开关。
 *
 * 找出并返回 n轮后有多少个亮着的灯泡。
 *
 */
public class BulbSwitch {

    // 最后是亮的，说明该灯被按了奇数次，怎样才会被按？只要有约数就会被按，同时约数肯定是成对出现的，那奇数只有一种情况，就是两个约数相等
    // 即要看所有灯泡中有相同约数的灯泡有几个
    public int bulbSwitch(int n) {
        return (int)Math.sqrt(n);
    }


}
